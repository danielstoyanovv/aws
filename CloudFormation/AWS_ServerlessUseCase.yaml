AWSTemplateFormatVersion: "2010-09-09"
Description: This is a banking app using S3, Lambda amd API Gateway
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
     - 
        Label: 
          default: "IAM Role"
        Parameters: 
          - LambdaExecutionRoleParameter
     - 
        Label: 
          default: "Lambda Parameters"
        Parameters: 
          - LambdaRuntimeParameter
          - LambdaFunctionNameParameter
     - 
        Label: 
          default: "API configuration"
        Parameters: 
          - RestApiNameParameter
          - ApiStageParameter 
Parameters:
   LambdaExecutionRoleParameter:
      Description: Enter lambda execution role
      Type: String
   LambdaFunctionNameParameter:
      Description: Enter lambda function name
      Type: String
   LambdaRuntimeParameter:
      Description: Enter the lambda runtime 
      Type: String
      Default: nodejs20.x
      AllowedValues:
         - nodejs20.x
         - nodejs19.x
         - nodejs18.x
   RestApiNameParameter:
      Description: Enter the name of REST API
      Type: String
   ApiStageParameter:
      Description: Enter the value of API Stage
      Type: String
      Default: Dev
      AllowedValues:
         - Dev
         - QA
         - Prod
Resources: 
   bankingS3bucket:
      Type: AWS::S3::Bucket
      DeletionPolicy: Retain
      Properties:
         BucketName: balancestatus1235
   LambdaExecutionRole:
      Type: AWS::IAM::Role
      DeletionPolicy: Retain
      Properties:
         AssumeRolePolicyDocument: 
            Version: "2012-10-17"
            Statement: 
               - Effect: "Allow"
                 Principal: 
                    Service: 
                      - "lambda.amazonaws.com"
                 Action: 
                   - "sts:AssumeRole"
         Description: IAM Role for Lambda to access S3
         ManagedPolicyArns: 
            - arn:aws:iam::aws:policy/AmazonS3FullAccess
         RoleName: !Ref LambdaExecutionRoleParameter
   LambdaFunction:
      DependsOn: LambdaExecutionRole
      Type: AWS::Lambda::Function
      DeletionPolicy: Retain
      Properties:
         FunctionName: !Ref LambdaFunctionNameParameter
         Runtime: !Ref LambdaRuntimeParameter
         Role: !GetAtt LambdaExecutionRole.Arn
         Handler: index.handler
         Code:
            ZipFile: |
               const { S3Client, GetObjectCommand } = require("@aws-sdk/client-s3");
               const { Readable } = require("stream");
               const s3 = new S3Client({ region: "us-east-1" }); // replace "us-east-1" with your AWS Region
               // Helper function to convert stream to a string
               const streamToString = (stream) =>
               new Promise((resolve, reject) => {
                  const chunks = [];
                  stream.on("data", (chunk) => chunks.push(chunk));
                  stream.on("error", reject);
                  stream.on("end", () => resolve(Buffer.concat(chunks).toString("utf-8")));
               });
               exports.handler = async function(event) {
                  const data = await s3.send(
                     new GetObjectCommand({ Bucket: "balancestatus1235", Key: "accountBalance" })
                  );
                  const bodyContents = await streamToString(data.Body);
                  return bodyContents;
               };
         Description: API Gateway Lambda S3
         TracingConfig:
            Mode: Active
   bankingRestAPI:
      Type: AWS::ApiGateway::RestApi
      DeletionPolicy: Retain
      Properties:
         Name: !Ref RestApiNameParameter
   bankingStatusResource:
      Type: AWS::ApiGateway::Resource
      DeletionPolicy: Retain
      Properties:
         ParentId: !GetAtt bankingRestAPI.RootResourceId
         PathPart: balancestatus01
         RestApiId: !Ref bankingRestAPI
   bankingStatusMehod:
      Type: AWS::ApiGateway::Method
      DeletionPolicy: Retain
      Properties:
         AuthorizationType: NONE
         HttpMethod: GET
         MethodResponses:
            - StatusCode : 200
         Integration: 
            Type: AWS
            IntegrationResponses:
               - StatusCode : 200
            IntegrationHttpMethod: POST
            Uri: !Sub arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations
         ResourceId: !Ref bankingStatusResource
         RestApiId: !Ref bankingRestAPI
   APIDeployment:
      DependsOn: bankingStatusMehod
      Type: AWS::ApiGateway::Deployment
      DeletionPolicy: Retain
      Properties:
         Description: My deployment to prod 
         RestApiId: !Ref bankingRestAPI
         StageName: !Ref ApiStageParameter
   lambdaPermission:
      Type: AWS::Lambda::Permission
      DeletionPolicy: Retain
      Properties:
         Action: lambda:InvokeFunction
         FunctionName: !Ref LambdaFunction
         Principal: apigateway.amazonaws.com
         SourceAccount: 971422719771